{"ast":null,"code":"import axios from 'axios';\nimport config from '../config/config';\n\n// Create a base axios instance with common configuration\nconst api = axios.create({\n  baseURL: config.api.baseURL,\n  timeout: config.api.timeout,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor for authentication\napi.interceptors.request.use(config => {\n  // Add authentication token to requests if available\n  const token = localStorage.getItem('adminToken');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor to handle common errors\napi.interceptors.response.use(response => response, error => {\n  // Only log errors in development\n  if (process.env.NODE_ENV !== 'production') {\n    console.error('API Error:', error.message);\n    if (error.response) {\n      console.error('Error response data:', error.response.data);\n      console.error('Error response status:', error.response.status);\n    }\n  }\n\n  // Handle specific error cases\n  if (error.response && error.response.status === 401) {\n    // Unauthorized - could redirect to login\n    // For future implementation: window.location.href = '/login';\n    console.log('User is not authorized');\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","config","api","create","baseURL","timeout","headers","interceptors","request","use","token","localStorage","getItem","error","Promise","reject","response","process","env","NODE_ENV","console","message","data","status","log"],"sources":["/Users/ioanaghita/gi_software/frontend/src/api/axiosConfig.js"],"sourcesContent":["import axios from 'axios';\nimport config from '../config/config';\n\n// Create a base axios instance with common configuration\nconst api = axios.create({\n  baseURL: config.api.baseURL,\n  timeout: config.api.timeout,\n  headers: {\n    'Content-Type': 'application/json',\n  }\n});\n\n// Add request interceptor for authentication\napi.interceptors.request.use(\n  config => {\n    // Add authentication token to requests if available\n    const token = localStorage.getItem('adminToken');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor to handle common errors\napi.interceptors.response.use(\n  response => response,\n  error => {\n    // Only log errors in development\n    if (process.env.NODE_ENV !== 'production') {\n      console.error('API Error:', error.message);\n      \n      if (error.response) {\n        console.error('Error response data:', error.response.data);\n        console.error('Error response status:', error.response.status);\n      }\n    }\n    \n    // Handle specific error cases\n    if (error.response && error.response.status === 401) {\n      // Unauthorized - could redirect to login\n      // For future implementation: window.location.href = '/login';\n      console.log('User is not authorized');\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,kBAAkB;;AAErC;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,MAAM,CAACC,GAAG,CAACE,OAAO;EAC3BC,OAAO,EAAEJ,MAAM,CAACC,GAAG,CAACG,OAAO;EAC3BC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAC1BR,MAAM,IAAI;EACR;EACA,MAAMS,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EAChD,IAAIF,KAAK,EAAE;IACTT,MAAM,CAACK,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUI,KAAK,EAAE;EACrD;EACA,OAAOT,MAAM;AACf,CAAC,EACDY,KAAK,IAAI;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAX,GAAG,CAACK,YAAY,CAACS,QAAQ,CAACP,GAAG,CAC3BO,QAAQ,IAAIA,QAAQ,EACpBH,KAAK,IAAI;EACP;EACA,IAAII,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzCC,OAAO,CAACP,KAAK,CAAC,YAAY,EAAEA,KAAK,CAACQ,OAAO,CAAC;IAE1C,IAAIR,KAAK,CAACG,QAAQ,EAAE;MAClBI,OAAO,CAACP,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACG,QAAQ,CAACM,IAAI,CAAC;MAC1DF,OAAO,CAACP,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACG,QAAQ,CAACO,MAAM,CAAC;IAChE;EACF;;EAEA;EACA,IAAIV,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;IACnD;IACA;IACAH,OAAO,CAACI,GAAG,CAAC,wBAAwB,CAAC;EACvC;EAEA,OAAOV,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeX,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}